<?xml version="1.0"?>

<launch>

	<!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->	
	<!--Dynamixel Connection To Motors-->
	<!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->

  <node name="node_dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
    <rosparam>
        namespace: dxl_manager
        serial_ports:
          dynamixel_port:
            port_name: "/dev/ttyUSB0"
            baud_rate: 1000000
            min_motor_id: 1
            max_motor_id: 10
            update_rate: 20
    </rosparam>
  </node>

  <!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->	
	<!--Controller Management-->
	<!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- Load joint controller configuration from YAML file to parameter server-->
  <rosparam file="$(find armstrong_controllers)/config/controllers.yaml" command="load"/>

  <!-- Start all individual joint controllers -->
  <node name="node_spawn_controllers" pkg="dynamixel_controllers" type="controller_spawner.py"
        args="--manager=dxl_manager
              --port dynamixel_port
              joint1_controller
              joint2_controller
              joint3_controller
              joint4_controller
              joint5_controller
              joint6_controller
              dual_gripper_controller"
              output="screen"/>
        
   	<!-- Start the overall arm trajectory controller -->
	<rosparam file="$(find armstrong_controllers)/config/joint_trajectory_controller.yaml" command="load"/>
  	<node name="node_spawn_arm_controller" pkg="dynamixel_controllers" type="controller_spawner.py" 
    		args="--manager=dxl_manager
	          	  --type=meta 
	              armstrong_controller
	              joint1_controller 
	              joint2_controller
	              joint3_controller 
	              joint4_controller 
	              joint5_controller
                  joint6_controller"
	              output="screen"/>

    <node name="node_spawn_gripper_controller" pkg="dynamixel_controllers" type="controller_spawner.py" 
        args="--manager=dxl_manager
                --type=meta 
                armstrong_gripper_controller
                dual_gripper_controller"
                output="screen"/>

  <!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->	
	<!--Robot State Publishing From Motors-->
	<!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find mastering_ros_robot)/urdf/armstrong.xacro'" />
  
  <include file="$(find armstrong_controllers)/launch/dynamixel_publisher.launch"/>
  <!--<node name="Dynamixel_Publisher" pkg="armstrong_controllers" type="dynamixel_publisher.py"/>-->

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen">
    <rosparam param="source_list">[joint_states]</rosparam>
    <rosparam param="use_gui">FALSE</rosparam>
  </node>
  
  <!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->	
	<!--Python listener for wheels-->
	<!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
  <node name="Motor_Control_Listener" pkg="armstrong_controllers" type="armstrong_wheels.py"/>
  <node name="Armstrong_Battery" pkg="armstrong_controllers" type="armstrong_battery.py"/>
</launch>
